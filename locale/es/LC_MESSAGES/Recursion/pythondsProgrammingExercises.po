# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:6
msgid "Programming Exercises"
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:8
msgid "Write a recursive function to compute the factorial of a number."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:10
msgid "Write a recursive function to reverse a list."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:12
msgid "Modify the recursive tree program using one or all of the following ideas:"
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:15
msgid ""
"Modify the thickness of the branches so that as the ``branchLen`` gets "
"smaller, the line gets thinner."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:18
msgid ""
"Modify the color of the branches so that as the ``branchLen`` gets very "
"short it is colored like a leaf."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:21
msgid ""
"Modify the angle used in turning the turtle so that at each branch point "
"the angle is selected at random in some range. For example choose the "
"angle between 15 and 45 degrees. Play around to see what looks good."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:26
msgid ""
"Modify the ``branchLen`` recursively so that instead of always "
"subtracting the same amount you subtract a random amount in some range."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:30
msgid ""
"If you implement all of the above ideas you will have a very realistic "
"looking tree."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:33
msgid ""
"Find or invent an algorithm for drawing a fractal mountain. Hint: One "
"approach to this uses triangles again."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:36
msgid ""
"Write a recursive function to compute the Fibonacci sequence. How does "
"the performance of the recursive function compare to that of an iterative"
" version?"
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:40
msgid ""
"Implement a solution to the Tower of Hanoi using three stacks to keep "
"track of the disks."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:43
msgid ""
"Using the turtle graphics module, write a recursive program to display a "
"Hilbert curve."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:46
msgid ""
"Using the turtle graphics module, write a recursive program to display a "
"Koch snowflake."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:49
msgid ""
"Write a program to solve the following problem: You have two jugs: a "
"4-gallon jug and a 3-gallon jug. Neither of the jugs have markings on "
"them. There is a pump that can be used to fill the jugs with water. How "
"can you get exactly two gallons of water in the 4-gallon jug?"
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:54
msgid ""
"Generalize the problem above so that the parameters to your solution "
"include the sizes of each jug and the final amount of water to be left in"
" the larger jug."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:58
msgid ""
"Write a program that solves the following problem: Three missionaries and"
" three cannibals come to a river and find a boat that holds two people. "
"Everyone must get across the river to continue on the journey. However, "
"if the cannibals ever outnumber the missionaries on either bank, the "
"missionaries will be eaten. Find a series of crossings that will get "
"everyone safely to the other side of the river."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:66
msgid ""
"Modify the Tower of Hanoi program using turtle graphics to animate the "
"movement of the disks. Hint: You can make multiple turtles and have them "
"shaped like rectangles."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:70
msgid ""
"Pascal’s triangle is a number triangle with numbers arranged in staggered"
" rows such that"
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:76
msgid ""
"This equation is the equation for a binomial coefficient. You can build "
"Pascal’s triangle by adding the two numbers that are diagonally above a "
"number in the triangle. An example of Pascal’s triangle is shown below."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:89
msgid ""
"Write a program that prints out Pascal’s triangle. Your program should "
"accept a parameter that tells how many rows of the triangle to print."
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:93
msgid ""
"Suppose you are a computer scientist/art thief who has broken into a "
"major art gallery. All you have with you to haul out your stolen art is "
"your knapsack which only holds :math:`W` pounds of art, but for every "
"piece of art you know its value and its weight. Write a dynamic "
"programming function to help you maximize your profit. Here is a sample "
"problem for you to use to get started: Suppose your knapsack can hold a "
"total weight of 20. You have 5 items as follows:"
msgstr ""

#: ../../_sources/Recursion/pythondsProgrammingExercises.rst:110
msgid ""
"This problem is called the string edit distance problem, and is quite "
"useful in many areas of research. Suppose that you want to transform the "
"word “algorithm” into the word “alligator.” For each letter you can "
"either copy the letter from one word to another at a cost of 5, you can "
"delete a letter at cost of 20, or insert a letter at a cost of 20. The "
"total cost to transform one word into another is used by spell check "
"programs to provide suggestions for words that are close to one another. "
"Use dynamic programming techniques to develop an algorithm that gives you"
" the smallest edit distance between any two words."
msgstr ""

