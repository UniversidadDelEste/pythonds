# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: 2017-04-05 17:00-0300\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Last-Translator: Carlos Sisek <carlos.sisek@gmail.com>\n"
"Language-Team: \n"
"Language: es_AR\n"
"X-Generator: Poedit 1.8.9\n"

# Carlos Sisek
# carlos.sisek@gmail.com
# Diplomatura en Software Libre
# Universidad del Este
# 2017
#: ../../_sources/Introduction/Summary.rst:6
msgid "Summary"
msgstr "Sumario"

#: ../../_sources/Introduction/Summary.rst:8
msgid "Computer science is the study of problem solving."
msgstr "La informática es el estudio de la resolución de problemas."

#: ../../_sources/Introduction/Summary.rst:10
msgid ""
"Computer science uses abstraction as a tool for representing both processes "
"and data."
msgstr ""
"La informática utiliza la abstracción como una herramienta para representar "
"tanto los procesos como los datos."

#: ../../_sources/Introduction/Summary.rst:13
msgid ""
"Abstract data types allow programmers to manage the complexity of a problem "
"domain by hiding the details of the data."
msgstr ""
"Los tipos de datos abstractos permiten a los programadores administrar la "
"complejidad de un dominio de problema ocultando los detalles de los datos."

#: ../../_sources/Introduction/Summary.rst:16
msgid "Python is a powerful, yet easy-to-use, object-oriented language."
msgstr ""
"Python es un poderoso, pero fácil de usar, el lenguaje orientado a objetos."

#: ../../_sources/Introduction/Summary.rst:18
msgid "Lists, tuples, and strings are built in Python sequential collections."
msgstr ""
"Las listas, tuplas y cadenas se crean en colecciones secuenciales de Python."

#: ../../_sources/Introduction/Summary.rst:21
msgid "Dictionaries and sets are nonsequential collections of data."
msgstr "Los diccionarios y conjuntos son colecciones no secuenciales de datos."

#: ../../_sources/Introduction/Summary.rst:23
msgid "Classes allow programmers to implement abstract data types."
msgstr ""
"Las clases permiten que los programadores implementen tipos de datos "
"abstractos."

#: ../../_sources/Introduction/Summary.rst:25
msgid "Programmers can override standard methods as well as create new methods."
msgstr ""
"Los programadores pueden anular los métodos estándar, así como crear nuevos "
"métodos."

#: ../../_sources/Introduction/Summary.rst:28
msgid "Classes can be organized into hierarchies."
msgstr "Las clases pueden organizarse en jerarquías."

#: ../../_sources/Introduction/Summary.rst:30
msgid ""
"A class constructor should always invoke the constructor of its parent before "
"continuing on with its own data and behavior."
msgstr ""
"Un constructor de clase siempre debe invocar al constructor de su padre antes "
"de continuar con sus propios datos y comportamiento."
