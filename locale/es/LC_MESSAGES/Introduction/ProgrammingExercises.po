# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: 2017-04-08 14:36-0500\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Francisco Silva G. <francisco.silva.garces@gmail.com>\n"
"Language-Team: \n"
"Language: es_419\n"
"X-Generator: Poedit 1.8.7.1\n"

#: ../../_sources/Introduction/ProgrammingExercises.rst:6
msgid "Programming Exercises"
msgstr "Ejercicios de Programación"

#: ../../_sources/Introduction/ProgrammingExercises.rst:8
msgid ""
"Implement the simple methods ``getNum`` and ``getDen`` that will return the "
"numerator and denominator of a fraction."
msgstr ""
"Implemente los métodos ``getNum`` y ``getDen`` que retornen el numerador y el "
"denominador de una fracción"

#: ../../_sources/Introduction/ProgrammingExercises.rst:11
msgid ""
"In many ways it would be better if all fractions were maintained in lowest "
"terms right from the start. Modify the constructor for the ``Fraction`` class "
"so that ``GCD`` is used to reduce fractions immediately. Notice that this "
"means the ``__add__`` function no longer needs to reduce. Make the necessary "
"modifications."
msgstr ""
"De muchas maneras sería mejor si todas las fracciones se mantuvieran en los "
"términos correctos más bajos desde el inicio. Modifique el constructor de la "
"clase ``Fraction`` para que ``GCD`` se use para reducir fracciones "
"inmediatamente. Observe que esto significa que la función ``__add__`` ya no "
"necesita reducir. Haga las modificaciones necesarias."

#: ../../_sources/Introduction/ProgrammingExercises.rst:17
msgid ""
"Implement the remaining simple arithmetic operators (``__sub__``, "
"``__mul__``, and ``__truediv__``)."
msgstr ""
"Implemente los demás operadores aritméticos simples (``__sub__``, "
"``__mul__``, and ``__truediv__``)."

#: ../../_sources/Introduction/ProgrammingExercises.rst:20
msgid ""
"Implement the remaining relational operators (``__gt__``, ``__ge__``, "
"``__lt__``, ``__le__``, and ``__ne__``)"
msgstr ""
"Implemente los demás operadores relacionales (``__gt__``, ``__ge__``, "
"``__lt__``, ``__le__``, and ``__ne__``)"

#: ../../_sources/Introduction/ProgrammingExercises.rst:23
msgid ""
"Modify the constructor for the fraction class so that it checks to make sure "
"that the numerator and denominator are both integers. If either is not an "
"integer the constructor should raise an exception."
msgstr ""
"Modifique el constructor para la clase fraction de modo que compruebe que el "
"numerador y el denominador son ambos enteros. Si no es un entero, el "
"constructor debe generar una excepción."

#: ../../_sources/Introduction/ProgrammingExercises.rst:27
msgid ""
"In the definition of fractions we assumed that negative fractions have a "
"negative numerator and a positive denominator. Using a negative denominator "
"would cause some of the relational operators to give incorrect results. In "
"general, this is an unnecessary constraint. Modify the constructor to allow "
"the user to pass a negative denominator so that all of the operators continue "
"to work properly."
msgstr ""
"En la definición de fracciones asumimos que las fracciones negativas tienen "
"un numerador negativo y un denominador positivo. El uso de un denominador "
"negativo haría que algunos de los operadores relacionales dieran resultados "
"incorrectos. En general, esto es una restricción innecesaria. Modifique el "
"constructor para permitir que el usuario pase un denominador negativo de tal "
"manera que todos los operadores continúen trabajando correctamente."

#: ../../_sources/Introduction/ProgrammingExercises.rst:35
msgid ""
"Research the ``__radd__`` method. How does it differ from ``__add__``? When "
"is it used? Implement ``__radd__``."
msgstr ""
"Investiga el método ``__radd__``. ¿En qué se diferencia de ``__add__``? "
"¿Cuándo se utiliza? Implementar ``__radd__``."

#: ../../_sources/Introduction/ProgrammingExercises.rst:38
msgid "Repeat the last question but this time consider the ``__iadd__`` method."
msgstr ""
"Repita la última pregunta, pero esta vez considere el método ``__iadd__``."

#: ../../_sources/Introduction/ProgrammingExercises.rst:41
msgid ""
"Research the ``__repr__`` method. How does it differ from ``__str__``? When "
"is it used? Implement ``__repr__``."
msgstr ""
"Investigue el método ``__repr__``.  ¿En qué se diferencia de ``__str__``? "
"¿Cuándo se utiliza? Implemente ``__repr__``."

#: ../../_sources/Introduction/ProgrammingExercises.rst:44
msgid ""
"Research other types of gates that exist (such as NAND, NOR, and XOR). Add "
"them to the circuit hierarchy. How much additional coding did you need to do?"
msgstr ""
"Investigue otros tipos de puertas que existen (como NAND, NOR, y XOR). "
"Añadirlos a la jerarquía del circuito. ¿Cuánta codificación adicional "
"necesitabas hacer?"

#: ../../_sources/Introduction/ProgrammingExercises.rst:48
msgid ""
"The most simple arithmetic circuit is known as the half-adder. Research the "
"simple half-adder circuit. Implement this circuit."
msgstr ""
"El circuito aritmético más simple se conoce como el sumador-medio (half-"
"adder). Investigue el circuito simple half-adder. Implemente este circuito."

#: ../../_sources/Introduction/ProgrammingExercises.rst:51
msgid "Now extend that circuit and implement an 8 bit full-adder."
msgstr ""
"Ahora extienda ese circuito e implemente un sumador completo (full-adder) de "
"8-bit."

#: ../../_sources/Introduction/ProgrammingExercises.rst:53
msgid ""
"The circuit simulation shown in this chapter works in a backward direction. "
"In other words, given a circuit, the output is produced by working back "
"through the input values, which in turn cause other outputs to be queried. "
"This continues until external input lines are found, at which point the user "
"is asked for values. Modify the implementation so that the action is in the "
"forward direction; upon receiving inputs the circuit produces an output."
msgstr ""
"La simulación de circuito que se muestra en este capítulo funciona en sentido "
"inverso. En otras palabras, dado un circuito, la salida es producida por el "
"trabajo inverso a través de los valores de entrada, que a su vez causan otras "
"salidas a ser consultadas. Esto continúa hasta que se encuentran líneas de "
"entrada externas, en cuyo punto se pide al usuario valores. Modifique la "
"implementación para que la acción esté en la dirección hacia adelante; al "
"recibir entradas el circuito produce una salida."

#: ../../_sources/Introduction/ProgrammingExercises.rst:61
msgid ""
"Design a class to represent a playing card. Now design a class to represent a "
"deck of cards. Using these two classes, implement a favorite card game."
msgstr ""
"Diseña una clase para representar un juego de cartas.  Ahora diseñe una clase "
"para representar una baraja de cartas. Usando estas dos clases, implementa su "
"juego de cartas favorito."

#: ../../_sources/Introduction/ProgrammingExercises.rst:65
msgid ""
"Find a Sudoku puzzle in the local newspaper. Write a program to solve the "
"puzzle."
msgstr ""
"Encuentre un rompecabezas de Sudoku en un periódico local. Escribe un "
"programa para resolver el rompecabezas"
