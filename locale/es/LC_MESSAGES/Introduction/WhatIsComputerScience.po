# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: 2017-05-06 13:57-0500\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Last-Translator: Francisco Silva G. <francisco.silva.garces@gmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"X-Generator: Poedit 2.0.1\n"

#: ../../_sources/Introduction/WhatIsComputerScience.rst:6
msgid "What Is Computer Science?"
msgstr "Qué es Ciencias de la Computación (Computer Science) ?"

#: ../../_sources/Introduction/WhatIsComputerScience.rst:8
msgid ""
"Computer science is often difficult to define. This is probably due to "
"the unfortunate use of the word “computer” in the name. As you are "
"perhaps aware, computer science is not simply the study of computers. "
"Although computers play an important supporting role as a tool in the "
"discipline, they are just that–tools."
msgstr ""
"La Ciencia de la Computación (Computer Sciencie) es a menudo difícil de "
"definir. Esto es probablemente debido al uso desafortunado de la palabra "
"\"computer\" en inglés. Como usted sabe, la ciencia de la computación no "
"es simplemente el estudio de las computadoras. Aunque las computadoras "
"desempeñan un rol de apoyo importante como una herramienta en la "
"disciplina, son sólo eso -herramientas."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:14
msgid ""
"Computer science is the study of problems, problem-solving, and the "
"solutions that come out of the problem-solving process. Given a problem, "
"a computer scientist’s goal is to develop an **algorithm**, a step-by-"
"step list of instructions for solving any instance of the problem that "
"might arise. Algorithms are finite processes that if followed will solve "
"the problem. Algorithms are solutions."
msgstr ""
"La Ciencia de la computación es el estudio de problemas, resolución de "
"problemas, y las soluciones que surgen del proceso de resolución de "
"problemas. Dado un problema, el objetivo de un científico de la "
"computación es desarrollar un **algoritmo**, una lista de instrucciones "
"paso a paso para resolver cualquier caso del problema que pudiera "
"surgir. Los algoritmos son procesos finitos que si se siguen resolverán "
"el problema. Los algoritmos son soluciones."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:21
msgid ""
"Computer science can be thought of as the study of algorithms. However, "
"we must be careful to include the fact that some problems may not have a "
"solution. Although proving this statement is beyond the scope of this "
"text, the fact that some problems cannot be solved is important for "
"those who study computer science. We can fully define computer science, "
"then, by including both types of problems and stating that computer "
"science is the study of solutions to problems as well as the study of "
"problems with no solutions."
msgstr ""
"La Ciencia de la computación puede ser pensada como el estudio de "
"algoritmos. Sin embargo, debemos tener cuidado de incluir el hecho de "
"que algunos problemas pueden no tener una solución. Aunque probar esta "
"afirmación está fuera del alcance de este texto, el hecho de que algunos "
"problemas no pueden ser resueltos es importante para aquellos que "
"estudian ciencias de la computación. Podemos definir completamente la "
"ciencia de la computación, incluyendo ambos tipos de problemas e "
"indicando que la ciencia de la computación es el estudio de soluciones a "
"problemas, así como el estudio de problemas sin soluciones."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:30
msgid ""
"It is also very common to include the word **computable** when "
"describing problems and solutions. We say that a problem is computable "
"if an algorithm exists for solving it. An alternative definition for "
"computer science, then, is to say that computer science is the study of "
"problems that are and that are not computable, the study of the "
"existence and the nonexistence of algorithms. In any case, you will note "
"that the word “computer” did not come up at all. Solutions are "
"considered independent from the machine."
msgstr ""
"También es muy común incluir la palabra **computable** al describir "
"problemas y soluciones. Decimos que un problema es computable si existe "
"un algoritmo para resolverlo. Una definición alternativa para la ciencia "
"de la computación, entonces, es decir que es el estudio de problemas que "
"son y que no son computables, el estudio de la existencia y la "
"inexistencia de algoritmos. En cualquier caso, observará que la palabra "
"\"computadora (computer)\" no aparece en absoluto. Las soluciones se "
"consideran independientes de la máquina."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:39
msgid ""
"Computer science, as it pertains to the problem-solving process itself, "
"is also the study of **abstraction**. Abstraction allows us to view the "
"problem and solution in such a way as to separate the so-called logical "
"and physical perspectives. The basic idea is familiar to us in a common "
"example."
msgstr ""
"La Ciencia de la computación, en lo que respecta al proceso de "
"resolución de problemas, es también el estudio de la **abstracción**. La "
"abstracción nos permite ver el problema y la solución de tal manera que "
"se separan las llamadas perspectivas lógicas y físicas. La idea básica "
"nos es familiar en un ejemplo común."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:45
msgid ""
"Consider the automobile that you may have driven to school or work "
"today. As a driver, a user of the car, you have certain interactions "
"that take place in order to utilize the car for its intended purpose. "
"You get in, insert the key, start the car, shift, brake, accelerate, and "
"steer in order to drive. From an abstraction point of view, we can say "
"that you are seeing the logical perspective of the automobile. You are "
"using the functions provided by the car designers for the purpose of "
"transporting you from one location to another. These functions are "
"sometimes also referred to as the **interface**."
msgstr ""
"Considere el automóvil que pudo haber utilizado para conducir a la "
"escuela o al trabajo el día de hoy. Como conductor, un usuario del "
"automóvil, usted tiene ciertas interacciones que tienen lugar con el fin "
"de utilizar el automóvil para su propósito previsto. Usted consigue "
"entrar, inserta la llave, arranca el motor, cambia de velocidad, frena, "
"acelera, y lo dirige con el fin de conducir. Desde el punto de vista de "
"la abstracción, podemos decir que usted está viendo la perspectiva "
"lógica del automóvil. Usted está utilizando las funciones proporcionadas "
"por los diseñadores de automóvil con el fin de transportarse de un lugar "
"a otro. Estas funciones a veces también se denominan la **interfaz**."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:55
msgid ""
"On the other hand, the mechanic who must repair your automobile takes a "
"very different point of view. She not only knows how to drive but must "
"know all of the details necessary to carry out all the functions that we "
"take for granted. She needs to understand how the engine works, how the "
"transmission shifts gears, how temperature is controlled, and so on. "
"This is known as the physical perspective, the details that take place "
"“under the hood.”"
msgstr ""
"Por otro lado, el mecánico que debe reparar su automóvil tiene un punto "
"de vista muy diferente. El no sólo sabe conducir, sino que debe conocer "
"todos los detalles necesarios para llevar a cabo todas las funciones que "
"damos por sentadas. Necesita entender cómo funciona el motor, cómo "
"cambia la transmisión, cómo se controla la temperatura, etc. Esto se "
"conoce como la perspectiva física, los detalles que tienen lugar \"bajo "
"el capó\"."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:63
msgid ""
"The same thing happens when we use computers. Most people use computers "
"to write documents, send and receive email, surf the web, play music, "
"store images, and play games without any knowledge of the details that "
"take place to allow those types of applications to work. They view "
"computers from a logical or user perspective. Computer scientists, "
"programmers, technology support staff, and system administrators take a "
"very different view of the computer. They must know the details of how "
"operating systems work, how network protocols are configured, and how to "
"code various scripts that control function. They must be able to control "
"the low-level details that a user simply assumes."
msgstr ""
"Lo mismo sucede cuando usamos computadoras. La mayoría de la gente "
"utiliza computadoras para escribir documentos, enviar y recibir correo "
"electrónico, navegar por la web, reproducir música, almacenar imágenes y "
"jugar sin tener conocimiento de los detalles que tienen lugar para "
"permitir que esos tipos de aplicaciones funcionen. Ellos ven las "
"computadoras desde una perspectiva lógica o de usuario. Los científicos "
"de la computación, los programadores, el personal de apoyo tecnológico y "
"los administradores de sistemas tienen una visión muy diferente de la "
"computadora. Deben conocer los detalles de cómo funcionan los sistemas "
"operativos, cómo se configuran los protocolos de red y cómo codificar "
"varios scripts que controlan la función. Deben ser capaces de controlar "
"los detalles de bajo nivel que un usuario simplemente asume."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:74
msgid ""
"The common point for both of these examples is that the user of the "
"abstraction, sometimes also called the client, does not need to know the "
"details as long as the user is aware of the way the interface works. "
"This interface is the way we as users communicate with the underlying "
"complexities of the implementation. As another example of abstraction, "
"consider the Python ``math`` module. Once we import the module, we can "
"perform computations such as"
msgstr ""
"El punto común para estos dos ejemplos es que el usuario de la "
"abstracción, a veces también llamado el cliente, no necesita conocer los "
"detalles mientras el usuario es consciente de la forma en que funciona "
"la interfaz. Esta interfaz es la forma en que los usuarios se comunican "
"con las complejidades subyacentes de la implementación. Como otro "
"ejemplo de abstracción, considere el módulo ``math`` de Python. Una vez "
"que importamos el módulo, podemos realizar cálculos tales como"

#: ../../_sources/Introduction/WhatIsComputerScience.rst:84
msgid ""
">>> import math\n"
">>> math.sqrt(16)\n"
"4.0\n"
">>>"
msgstr ""

#: ../../_sources/Introduction/WhatIsComputerScience.rst:89
msgid ""
"This is an example of **procedural abstraction**. We do not necessarily "
"know how the square root is being calculated, but we know what the "
"function is called and how to use it. If we perform the import "
"correctly, we can assume that the function will provide us with the "
"correct results. We know that someone implemented a solution to the "
"square root problem but we only need to know how to use it. This is "
"sometimes referred to as a “black box” view of a process. We simply "
"describe the interface: the name of the function, what is needed (the "
"parameters), and what will be returned. The details are hidden inside "
"(see :ref:`Figure 1 <fig_procabstraction>`)."
msgstr ""
"Este es un ejemplo de **abstracción procedimental**. No sabemos "
"necesariamente cómo se calcula la raíz cuadrada, pero sabemos qué "
"función se llama y cómo usarla. Si realizamos la importación "
"correctamente, podemos suponer que la función nos proporcionará los "
"resultados correctos. Sabemos que alguien implementó una solución al "
"problema de raíz cuadrada, pero sólo necesitamos saber cómo usarlo. Esto "
"se refiere a veces como una \"caja negra\" vista de un proceso. "
"Simplemente describimos la interfaz: el nombre de la función, lo que se "
"necesita (los parámetros) y lo que devolverá. Los detalles están ocultos "
"dentro (ver: ref: `Figura 1 <fig_procabstraction>`)."

#: ../../_sources/Introduction/WhatIsComputerScience.rst:106
msgid ".. image:: Introduction/Figures/blackbox.png"
msgstr ""

#: ../../_sources/Introduction/WhatIsComputerScience.rst:106
msgid "Figure 1: Procedural Abstraction"
msgstr "Figura 1: Abstracción Procedimental"
