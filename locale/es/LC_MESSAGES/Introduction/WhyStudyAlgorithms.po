# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: 2017-05-06 14:57-0500\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Last-Translator: Francisco Silva G. <francisco.silva.garces@gmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"X-Generator: Poedit 2.0.1\n"

#: ../../_sources/Introduction/WhyStudyAlgorithms.rst:6
msgid "Why Study Algorithms?"
msgstr "¿Porqué estudiar los Algoritmos?"

#: ../../_sources/Introduction/WhyStudyAlgorithms.rst:8
msgid ""
"Computer scientists learn by experience. We learn by seeing others solve "
"problems and by solving problems by ourselves. Being exposed to "
"different problem-solving techniques and seeing how different algorithms "
"are designed helps us to take on the next challenging problem that we "
"are given. By considering a number of different algorithms, we can begin "
"to develop pattern recognition so that the next time a similar problem "
"arises, we are better able to solve it."
msgstr ""
"Los científicos informáticos aprenden por experiencia. Aprendemos al ver "
"a otros resolver problemas y resolviendo problemas por nosotros mismos. "
"Estar expuesto a diferentes técnicas de resolución de problemas y ver "
"cómo se diseñan los diferentes algoritmos nos ayuda a enfrentar el "
"siguiente problema desafiante que se nos da. Al considerar una serie de "
"algoritmos diferentes, podemos comenzar a desarrollar el reconocimiento "
"de patrones de modo que la próxima vez que surja un problema similar, "
"estamos más capacitados para resolverlo."

#: ../../_sources/Introduction/WhyStudyAlgorithms.rst:16
msgid ""
"Algorithms are often quite different from one another. Consider the "
"example of ``sqrt`` seen earlier. It is entirely possible that there are "
"many different ways to implement the details to compute the square root "
"function. One algorithm may use many fewer resources than another. One "
"algorithm might take 10 times as long to return the result as the other. "
"We would like to have some way to compare these two solutions. Even "
"though they both work, one is perhaps “better” than the other. We might "
"suggest that one is more efficient or that one simply works faster or "
"uses less memory. As we study algorithms, we can learn analysis "
"techniques that allow us to compare and contrast solutions based solely "
"on their own characteristics, not the characteristics of the program or "
"computer used to implement them."
msgstr ""
"Los algoritmos a menudo son muy diferentes entre sí. Considere el "
"ejemplo de ``sqrt`` visto anteriormente. Es completamente posible que "
"hayan muchas maneras diferentes de implementar los detalles para "
"calcular la función de raíz cuadrada. Un algoritmo puede utilizar mucho "
"menos recursos que otro. Un algoritmo puede tomar 10 veces más tiempo "
"para devolver el resultado que el otro. Nos gustaría tener alguna manera "
"de comparar estas dos soluciones. Aunque ambos trabajan, uno es tal vez "
"\"mejor\" que el otro. Podríamos sugerir que uno es más eficiente o que "
"uno simplemente trabaja más rápido o usa menos memoria. A medida que "
"estudiamos algoritmos, podemos aprender técnicas de análisis que nos "
"permiten comparar y contrastar soluciones basadas únicamente en sus "
"propias características, no en las características del programa o la "
"computadora utilizada para implementarlas."

#: ../../_sources/Introduction/WhyStudyAlgorithms.rst:29
msgid ""
"In the worst case scenario, we may have a problem that is intractable, "
"meaning that there is no algorithm that can solve the problem in a "
"realistic amount of time. It is important to be able to distinguish "
"between those problems that have solutions, those that do not, and those "
"where solutions exist but require too much time or other resources to "
"work reasonably."
msgstr ""
"En el peor de los casos, podemos tener un problema que es intratable, lo "
"que significa que no hay ningún algoritmo que puede resolver el problema "
"en una cantidad realista de tiempo. Es importante poder distinguir entre "
"los problemas que tienen soluciones, los que no, y aquellos en los que "
"existen soluciones pero que requieren demasiado tiempo u otros recursos "
"para trabajar razonablemente."

#: ../../_sources/Introduction/WhyStudyAlgorithms.rst:36
msgid ""
"There will often be trade-offs that we will need to identify and decide "
"upon. As computer scientists, in addition to our ability to solve "
"problems, we will also need to know and understand solution evaluation "
"techniques. In the end, there are often many ways to solve a problem. "
"Finding a solution and then deciding whether it is a good one are tasks "
"that we will do over and over again."
msgstr ""
"A menudo habrá concesiones que tendremos que identificar y decidir. Como "
"científicos de la computación, además de nuestra capacidad para resolver "
"problemas, también necesitaremos conocer y entender las técnicas de "
"evaluación de soluciones. Al final, a menudo hay muchas maneras de "
"resolver un problema. Encontrar una solución y luego decidir si es una "
"buena son tareas que vamos a hacer una y otra vez."
