# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/SortSearch/TheBubbleSort.rst:6
msgid "The Bubble Sort"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:8
msgid ""
"The **bubble sort** makes multiple passes through a list. It compares "
"adjacent items and exchanges those that are out of order. Each pass "
"through the list places the next largest value in its proper place. In "
"essence, each item “bubbles” up to the location where it belongs."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:13
msgid ""
":ref:`Figure 1 <fig_bubblepass>` shows the first pass of a bubble sort. "
"The shaded items are being compared to see if they are out of order. If "
"there are *n* items in the list, then there are :math:`n-1` pairs of "
"items that need to be compared on the first pass. It is important to note"
" that once the largest value in the list is part of a pair, it will "
"continually be moved along until the pass is complete."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:25
msgid ".. image:: SortSearch/Figures/bubblepass.png"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:25
msgid "Figure 1: ``bubbleSort``: The First Pass"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:28
msgid ""
"At the start of the second pass, the largest value is now in place. There"
" are :math:`n-1` items left to sort, meaning that there will be "
":math:`n-2` pairs. Since each pass places the next largest value in "
"place, the total number of passes necessary will be :math:`n-1`. After "
"completing the :math:`n-1` passes, the smallest item must be in the "
"correct position with no further processing required. :ref:`ActiveCode 1 "
"<lst_bubble>` shows the complete ``bubbleSort`` function. It takes the "
"list as a parameter, and modifies it by exchanging items as necessary."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:37
msgid ""
"The exchange operation, sometimes called a “swap,” is slightly different "
"in Python than in most other programming languages. Typically, swapping "
"two elements in a list requires a temporary storage location (an "
"additional memory location). A code fragment such as"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:44
msgid ""
"temp = alist[i]\n"
"alist[i] = alist[j]\n"
"alist[j] = temp"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:48
msgid ""
"will exchange the `ith` and `jth` items in the list. Without the "
"temporary storage, one of the values would be overwritten."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:51
msgid ""
"In Python, it is possible to perform simultaneous assignment. The "
"statement ``a,b=b,a`` will result in two assignment statements being done"
" at the same time (see :ref:`Figure 2 <fig_pythonswap>`). Using "
"simultaneous assignment, the exchange operation can be done in one "
"statement."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:56
msgid ""
"Lines 5-7 in :ref:`ActiveCode 1 <lst_bubble>` perform the exchange of the"
" :math:`i` and :math:`(i+1)th` items using the three–step procedure "
"described earlier. Note that we could also have used the simultaneous "
"assignment to swap the items."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:66
msgid ".. image:: SortSearch/Figures/swap.png"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:66
msgid "Figure 2: Exchanging Two Values in Python"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:68
msgid ""
"The following activecode example shows the complete ``bubbleSort`` "
"function working on the list shown above."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:87
msgid "data-caption='The Bubble Sort'"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:87
msgid ""
"def bubbleSort(alist):\n"
"    for passnum in range(len(alist)-1,0,-1):\n"
"        for i in range(passnum):\n"
"            if alist[i]>alist[i+1]:\n"
"                temp = alist[i]\n"
"                alist[i] = alist[i+1]\n"
"                alist[i+1] = temp\n"
"\n"
"alist = [54,26,93,17,77,31,44,55,20]\n"
"bubbleSort(alist)\n"
"print(alist)"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:88
msgid "The following animation shows ``bubbleSort`` in action."
msgstr ""

msgid ""
"<script type=\"text/javascript\" "
"src=\"../_static/sortmodels.js\"></script>\n"
"<script type=\"text/javascript\" "
"src=\"../_static/sortviewers.js\"></script>\n"
"\n"
"<div id=\"bubble_anim\">\n"
"<canvas id=\"bubble_anim_canvas\" width=\"400\" height=\"400\" "
"style=\"border:4px solid blue\"></canvas>\n"
"<br />\n"
"<button onclick=\"bubble_anim_anim = "
"bubble_anim_init('bubble_anim')\">Initialize</button>\n"
"<button onclick=\"bubble_anim_anim.run('bubble_anim_anim')\">Run</button>"
"\n"
"<button onclick=\"bubble_anim_anim.stop()\">Stop</button> </br>\n"
"<button onclick=\"bubble_anim_anim.begin()\">Beginning</button>\n"
"<button onclick=\"bubble_anim_anim.forward()\">Step Forward</button>\n"
"<button onclick=\"bubble_anim_anim.backward()\">Step Backward</button>\n"
"<button onclick=\"bubble_anim_anim.end()\">End</button>\n"
"\n"
"<script type=\"text/javascript\">\n"
"bubble_anim_init = function(divid)\n"
"{\n"
"   var a = new Animator(new BubbleSortModel(), new BarViewer(), divid)\n"
"   a.init()\n"
"   return a\n"
"}\n"
"</script>\n"
"\n"
"</div>\n"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:114
msgid ""
"To analyze the bubble sort, we should note that regardless of how the "
"items are arranged in the initial list, :math:`n-1` passes will be made "
"to sort a list of size *n*. :ref:`Table 1 <tbl_bubbleanalysis>` shows the"
" number of comparisons for each pass. The total number of comparisons is "
"the sum of the first :math:`n-1` integers. Recall that the sum of the "
"first *n* integers is :math:`\\frac{1}{2}n^{2} + \\frac{1}{2}n`. The sum "
"of the first :math:`n-1` integers is :math:`\\frac{1}{2}n^{2} + "
"\\frac{1}{2}n - n`, which is :math:`\\frac{1}{2}n^{2} - \\frac{1}{2}n`. "
"This is still :math:`O(n^{2})` comparisons. In the best case, if the list"
" is already ordered, no exchanges will be made. However, in the worst "
"case, every comparison will cause an exchange. On average, we exchange "
"half of the time."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:130
msgid "**Table 1: Comparisons for Each Pass of Bubble Sort**"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:133
msgid "**Pass**"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:133
msgid "**Comparisons**"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:135
msgid "1"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:135
#: ../../_sources/SortSearch/TheBubbleSort.rst:139
msgid ":math:`n-1`"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:136
msgid "2"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:136
msgid ":math:`n-2`"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:137
msgid "3"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:137
msgid ":math:`n-3`"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:138
msgid "..."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:139
msgid ":math:`1`"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:143
msgid ""
"A bubble sort is often considered the most inefficient sorting method "
"since it must exchange items before the final location is known. These "
"“wasted” exchange operations are very costly. However, because the bubble"
" sort makes passes through the entire unsorted portion of the list, it "
"has the capability to do something most sorting algorithms cannot. In "
"particular, if during a pass there are no exchanges, then we know that "
"the list must be sorted. A bubble sort can be modified to stop early if "
"it finds that the list has become sorted. This means that for lists that "
"require just a few passes, a bubble sort may have an advantage in that it"
" will recognize the sorted list and stop. :ref:`ActiveCode 2 "
"<lst_shortbubble>` shows this modification, which is often referred to as"
" the **short bubble**."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:176
msgid "data-caption='The Short Bubble Sort'"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:176
msgid ""
"def shortBubbleSort(alist):\n"
"    exchanges = True\n"
"    passnum = len(alist)-1\n"
"    while passnum > 0 and exchanges:\n"
"       exchanges = False\n"
"       for i in range(passnum):\n"
"           if alist[i]>alist[i+1]:\n"
"               exchanges = True\n"
"               temp = alist[i]\n"
"               alist[i] = alist[i+1]\n"
"               alist[i+1] = temp\n"
"       passnum = passnum-1\n"
"\n"
"alist=[20,30,40,90,50,60,70,80,100,110]\n"
"shortBubbleSort(alist)\n"
"print(alist)"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:199
msgid "Self Check"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid "[1, 9, 19, 7, 3, 10, 13, 15, 8, 12]"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid "[1, 3, 7, 9, 10, 8, 12, 13, 15, 19]"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid "[1, 7, 3, 9, 10, 13, 8, 12, 15, 19]"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid ""
"This answer represents three swaps.  A pass means that you continue "
"swapping all the way to the end of the list."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid "Very Good"
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid ""
"A bubble sort contines to swap numbers up to index position passnum.  But"
" remember that passnum starts at the length of the list - 1."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:213
msgid "You have been doing an insertion sort, not a bubble sort."
msgstr ""

#: ../../_sources/SortSearch/TheBubbleSort.rst:212
msgid ""
"Q-15: Suppose you have the following list of numbers to sort: <br> [19, "
"1, 9, 7, 3, 10, 13, 15, 8, 12] which list represents the partially sorted"
" list after three complete passes of bubble sort?"
msgstr ""

