# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/AlgorithmAnalysis/PerformanceofPythonDataStructures.rst:6
msgid "Performance of Python Data Structures"
msgstr ""

#: ../../_sources/AlgorithmAnalysis/PerformanceofPythonDataStructures.rst:8
msgid ""
"Now that you have a general idea of Big-O notation and the differences "
"between the different functions, our goal in this section is to tell you "
"about the Big-O performance for the operations on Python lists and "
"dictionaries. We will then show you some timing experiments that "
"illustrate the costs and benefits of using certain operations on each "
"data structure. It is important for you to understand the efficiency of "
"these Python data structures because they are the building blocks we will"
" use as we implement other data structures in the remainder of the book. "
"In this section we are not going to explain why the performance is what "
"it is. In later chapters you will see some possible implementations of "
"both lists and dictionaries and how the performance depends on the "
"implementation."
msgstr ""

