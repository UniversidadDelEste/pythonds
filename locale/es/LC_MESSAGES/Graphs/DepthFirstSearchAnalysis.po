# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/Graphs/DepthFirstSearchAnalysis.rst:6
msgid "Depth First Search Analysis"
msgstr ""

#: ../../_sources/Graphs/DepthFirstSearchAnalysis.rst:9
msgid ""
"The general running time for depth first search is as follows. The loops "
"in ``dfs`` both run in :math:`O(V)`, not counting what happens in "
"``dfsvisit``, since they are executed once for each vertex in the graph. "
"In ``dfsvisit`` the loop is executed once for each edge in the adjacency "
"list of the current vertex. Since ``dfsvisit`` is only called recursively"
" if the vertex is white, the loop will execute a maximum of once for "
"every edge in the graph or :math:`O(E)`. So, the total time for depth "
"first search is :math:`O(V + E)`."
msgstr ""

