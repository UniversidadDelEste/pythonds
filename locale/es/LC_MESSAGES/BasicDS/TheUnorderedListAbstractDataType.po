# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving
# with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures "
"3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:6
msgid "The Unordered List Abstract Data Type"
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:8
msgid ""
"The structure of an unordered list, as described above, is a collection "
"of items where each item holds a relative position with respect to the "
"others. Some possible unordered list operations are given below."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:12
msgid ""
"``List()`` creates a new list that is empty. It needs no parameters and "
"returns an empty list."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:15
msgid ""
"``add(item)`` adds a new item to the list. It needs the item and returns "
"nothing. Assume the item is not already in the list."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:18
msgid ""
"``remove(item)`` removes the item from the list. It needs the item and "
"modifies the list. Assume the item is present in the list."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:21
msgid ""
"``search(item)`` searches for the item in the list. It needs the item and"
" returns a boolean value."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:24
msgid ""
"``isEmpty()`` tests to see whether the list is empty. It needs no "
"parameters and returns a boolean value."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:27
msgid ""
"``size()`` returns the number of items in the list. It needs no "
"parameters and returns an integer."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:30
msgid ""
"``append(item)`` adds a new item to the end of the list making it the "
"last item in the collection. It needs the item and returns nothing. "
"Assume the item is not already in the list."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:34
msgid ""
"``index(item)`` returns the position of item in the list. It needs the "
"item and returns the index. Assume the item is in the list."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:37
msgid ""
"``insert(pos,item)`` adds a new item to the list at position pos. It "
"needs the item and returns nothing. Assume the item is not already in the"
" list and there are enough existing items to have position pos."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:41
msgid ""
"``pop()`` removes and returns the last item in the list. It needs nothing"
" and returns an item. Assume the list has at least one item."
msgstr ""

#: ../../_sources/BasicDS/TheUnorderedListAbstractDataType.rst:44
msgid ""
"``pop(pos)`` removes and returns the item at position pos. It needs the "
"position and returns the item. Assume the item is in the list."
msgstr ""

