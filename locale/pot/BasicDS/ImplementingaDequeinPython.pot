# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:6
msgid "Implementing a Deque in Python"
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:8
msgid "As we have done in previous sections, we will create a new class for the implementation of the abstract data type deque. Again, the Python list will provide a very nice set of methods upon which to build the details of the deque. Our implementation (:ref:`Listing 1 <lst_dequecode>`) will assume that the rear of the deque is at position 0 in the list."
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:19
msgid "**Listing 1**"
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:23
msgid "class Deque:\n"
"    def __init__(self):\n"
"        self.items = []\n"
"\n"
"    def isEmpty(self):\n"
"        return self.items == []\n"
"\n"
"    def addFront(self, item):\n"
"        self.items.append(item)\n"
"\n"
"    def addRear(self, item):\n"
"        self.items.insert(0,item)\n"
"\n"
"    def removeFront(self):\n"
"        return self.items.pop()\n"
"\n"
"    def removeRear(self):\n"
"        return self.items.pop(0)\n"
"\n"
"    def size(self):\n"
"        return len(self.items)"
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:48
msgid "In ``removeFront`` we use the ``pop`` method to remove the last element from the list. However, in ``removeRear``, the ``pop(0)`` method must remove the first element of the list. Likewise, we need to use the ``insert`` method (line 12) in ``addRear`` since the ``append`` method assumes the addition of a new element to the end of the list."
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:54
msgid "CodeLens 1 shows the ``Deque`` class in action as we perform the sequence of operations from :ref:`Table 1 <tbl_dequeoperations>`."
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:None
msgid "\n"
"<div class=\"alert alert-warning cd_section\">\n"
"<div id=\"deqtest\"></div>\n"
"<p class=\"cl_caption\"><span class=\"cl_caption_text\">Example Deque Operations (deqtest)</span> </p>\n"
"</div>\n"
"<script type=\"text/javascript\">\n"
"var deqtest_trace = {\"code\": \"class Deque:\\n    def __init__(self):\\n        self.items = []\\n\\n    def isEmpty(self):\\n        return self.items == []\\n\\n    def addFront(self, item):\\n        self.items.append(item)\\n\\n    def addRear(self, item):\\n        self.items.insert(0,item)\\n\\n    def removeFront(self):\\n        return self.items.pop()\\n\\n    def removeRear(self):\\n        return self.items.pop(0)\\n\\n    def size(self):\\n        return len(self.items)\\n\\nd=Deque()\\nprint(d.isEmpty())\\nd.addRear(4)\\nd.addRear('dog')\\nd.addFront('cat')\\nd.addFront(True)\\nprint(d.size())\\nprint(d.isEmpty())\\nd.addRear(8.4)\\nprint(d.removeRear())\\nprint(d.removeFront())\", \"trace\": [{\"ordered_globals\": [], \"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {}, \"heap\": {}, \"line\": 1, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\"], \"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null]}, \"line\": 23, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\"], \"stdout\": \"\", \"func_name\": \"__init__\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"__init__\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"__init___f1\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\"]}, \"line\": 2, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\"], \"stdout\": \"\", \"func_name\": \"__init__\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"__init__\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"__init___f1\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\"]}, \"line\": 3, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\"], \"stdout\": \"\", \"func_name\": \"__init__\", \"stack_to_render\": [{\"frame_id\": 1, \"encoded_locals\": {\"__return__\": null, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"__init__\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"__init___f1\", \"ordered_varnames\": [\"self\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 3, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 24, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"\", \"func_name\": \"isEmpty\", \"stack_to_render\": [{\"frame_id\": 2, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"isEmpty\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"isEmpty_f2\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 5, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"\", \"func_name\": \"isEmpty\", \"stack_to_render\": [{\"frame_id\": 2, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"isEmpty\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"isEmpty_f2\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"\", \"func_name\": \"isEmpty\", \"stack_to_render\": [{\"frame_id\": 2, \"encoded_locals\": {\"__return__\": true, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"isEmpty\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"isEmpty_f2\", \"ordered_varnames\": [\"self\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 6, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 25, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 3, \"encoded_locals\": {\"item\": 4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f3\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 11, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 3, \"encoded_locals\": {\"item\": 4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f3\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\"]}, \"line\": 12, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 3, \"encoded_locals\": {\"__return__\": null, \"item\": 4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f3\", \"ordered_varnames\": [\"self\", \"item\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 4]}, \"line\": 12, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 4]}, \"line\": 26, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 4, \"encoded_locals\": {\"item\": \"dog\", \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f4\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 4]}, \"line\": 11, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 4, \"encoded_locals\": {\"item\": \"dog\", \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f4\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 4]}, \"line\": 12, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 4, \"encoded_locals\": {\"__return__\": null, \"item\": \"dog\", \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f4\", \"ordered_varnames\": [\"self\", \"item\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4]}, \"line\": 12, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4]}, \"line\": 27, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addFront\", \"stack_to_render\": [{\"frame_id\": 5, \"encoded_locals\": {\"item\": \"cat\", \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addFront_f5\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4]}, \"line\": 8, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addFront\", \"stack_to_render\": [{\"frame_id\": 5, \"encoded_locals\": {\"item\": \"cat\", \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addFront_f5\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4]}, \"line\": 9, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addFront\", \"stack_to_render\": [{\"frame_id\": 5, \"encoded_locals\": {\"__return__\": null, \"item\": \"cat\", \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addFront_f5\", \"ordered_varnames\": [\"self\", \"item\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\"]}, \"line\": 9, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\"]}, \"line\": 28, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addFront\", \"stack_to_render\": [{\"frame_id\": 6, \"encoded_locals\": {\"item\": true, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addFront_f6\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\"]}, \"line\": 8, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addFront\", \"stack_to_render\": [{\"frame_id\": 6, \"encoded_locals\": {\"item\": true, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addFront_f6\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\"]}, \"line\": 9, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"addFront\", \"stack_to_render\": [{\"frame_id\": 6, \"encoded_locals\": {\"__return__\": null, \"item\": true, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addFront_f6\", \"ordered_varnames\": [\"self\", \"item\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 9, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 29, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"size\", \"stack_to_render\": [{\"frame_id\": 7, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"size\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"size_f7\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 20, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"size\", \"stack_to_render\": [{\"frame_id\": 7, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"size\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"size_f7\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 21, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n\", \"func_name\": \"size\", \"stack_to_render\": [{\"frame_id\": 7, \"encoded_locals\": {\"__return__\": 4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"size\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"size_f7\", \"ordered_varnames\": [\"self\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 21, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 30, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\n\", \"func_name\": \"isEmpty\", \"stack_to_render\": [{\"frame_id\": 8, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"isEmpty\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"isEmpty_f8\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 5, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\n\", \"func_name\": \"isEmpty\", \"stack_to_render\": [{\"frame_id\": 8, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"isEmpty\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"isEmpty_f8\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 6, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\n\", \"func_name\": \"isEmpty\", \"stack_to_render\": [{\"frame_id\": 8, \"encoded_locals\": {\"__return__\": false, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"isEmpty\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"isEmpty_f8\", \"ordered_varnames\": [\"self\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 6, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 31, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 9, \"encoded_locals\": {\"item\": 8.4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f9\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 11, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 9, \"encoded_locals\": {\"item\": 8.4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f9\", \"ordered_varnames\": [\"self\", \"item\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 12, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"addRear\", \"stack_to_render\": [{\"frame_id\": 9, \"encoded_locals\": {\"__return__\": null, \"item\": 8.4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"addRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"addRear_f9\", \"ordered_varnames\": [\"self\", \"item\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 8.4, \"dog\", 4, \"cat\", true]}, \"line\": 12, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 8.4, \"dog\", 4, \"cat\", true]}, \"line\": 32, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"removeRear\", \"stack_to_render\": [{\"frame_id\": 10, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeRear_f10\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 8.4, \"dog\", 4, \"cat\", true]}, \"line\": 17, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"removeRear\", \"stack_to_render\": [{\"frame_id\": 10, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeRear_f10\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", 8.4, \"dog\", 4, \"cat\", true]}, \"line\": 18, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n\", \"func_name\": \"removeRear\", \"stack_to_render\": [{\"frame_id\": 10, \"encoded_locals\": {\"__return__\": 8.4, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeRear\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeRear_f10\", \"ordered_varnames\": [\"self\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 18, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n8.4\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 33, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n8.4\\n\", \"func_name\": \"removeFront\", \"stack_to_render\": [{\"frame_id\": 11, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeFront_f11\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 14, \"event\": \"call\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n8.4\\n\", \"func_name\": \"removeFront\", \"stack_to_render\": [{\"frame_id\": 11, \"encoded_locals\": {\"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeFront_f11\", \"ordered_varnames\": [\"self\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\", true]}, \"line\": 15, \"event\": \"step_line\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n8.4\\n\", \"func_name\": \"removeFront\", \"stack_to_render\": [{\"frame_id\": 11, \"encoded_locals\": {\"__return__\": true, \"self\": [\"REF\", 9]}, \"is_highlighted\": true, \"is_parent\": false, \"func_name\": \"removeFront\", \"is_zombie\": false, \"parent_frame_id_list\": [], \"unique_hash\": \"removeFront_f11\", \"ordered_varnames\": [\"self\", \"__return__\"]}], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\"]}, \"line\": 15, \"event\": \"return\"}, {\"ordered_globals\": [\"Deque\", \"d\"], \"stdout\": \"True\\n4\\nFalse\\n8.4\\nTrue\\n\", \"func_name\": \"<module>\", \"stack_to_render\": [], \"globals\": {\"Deque\": [\"REF\", 1], \"d\": [\"REF\", 9]}, \"heap\": {\"1\": [\"CLASS\", \"Deque\", [], [\"__init__\", [\"REF\", 2]], [\"addFront\", [\"REF\", 3]], [\"addRear\", [\"REF\", 4]], [\"isEmpty\", [\"REF\", 5]], [\"removeFront\", [\"REF\", 6]], [\"removeRear\", [\"REF\", 7]], [\"size\", [\"REF\", 8]]], \"2\": [\"FUNCTION\", \"__init__(self)\", null], \"3\": [\"FUNCTION\", \"addFront(self, item)\", null], \"4\": [\"FUNCTION\", \"addRear(self, item)\", null], \"5\": [\"FUNCTION\", \"isEmpty(self)\", null], \"6\": [\"FUNCTION\", \"removeFront(self)\", null], \"7\": [\"FUNCTION\", \"removeRear(self)\", null], \"8\": [\"FUNCTION\", \"size(self)\", null], \"9\": [\"INSTANCE\", \"Deque\", [\"items\", [\"REF\", 10]]], \"10\": [\"LIST\", \"dog\", 4, \"cat\"]}, \"line\": 33, \"event\": \"return\"}]};\n"
"var deqtest_vis;\n"
"\n"
"$(document).ready(function() {\n"
"    try {\n"
"        deqtest_vis = new ExecutionVisualizer('deqtest',deqtest_trace,\n"
"                                    {embeddedMode: true,\n"
"                                    verticalStack: false,\n"
"                                    heightChangeCallback: redrawAllVisualizerArrows,\n"
"                                    codeDivWidth: 500,\n"
"                                    lang : 'py2'\n"
"                                    });\n"
"        attachLoggers(deqtest_vis,'deqtest');\n"
"        styleButtons('deqtest');\n"
"        allVisualizers.push(deqtest_vis);\n"
"    } catch (e) {\n"
"        console.log(\"Failed to Initialize CodeLens component deqtest_vis\" );\n"
"        console.log(e.toString());\n"
"    }\n"
"\n"
"});\n"
"\n"
"$(document).ready(function() {\n"
"    $(\"#deqtest_tracecheck\").click(function() {\n"
"        logBookEvent({'event':'codelens', 'act': 'check', 'div_id':'deqtest'});\n"
"    });\n"
"});\n"
"\n"
"if (allVisualizers === undefined) {\n"
"   var allVisualizers = [];\n"
"}\n"
"\n"
"\n"
"$(window).resize(function() {\n"
"    if (deqtest_vis) {\n"
"        deqtest_vis.redrawConnectors();\n"
"    }\n"
"});\n"
"</script>\n"
""
msgstr ""

#: ../../_sources/BasicDS/ImplementingaDequeinPython.rst:96
msgid "You can see many similarities to Python code already described for stacks and queues. You are also likely to observe that in this implementation adding and removing items from the front is O(1) whereas adding and removing from the rear is O(n). This is to be expected given the common operations that appear for adding and removing items. Again, the important thing is to be certain that we know where the front and rear are assigned in the implementation."
msgstr ""

