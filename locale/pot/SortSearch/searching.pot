# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/SortSearch/searching.rst:6
msgid "Searching"
msgstr ""

#: ../../_sources/SortSearch/searching.rst:8
msgid "We will now turn our attention to some of the most common problems that arise in computing, those of searching and sorting. In this section we will study searching. We will return to sorting later in the chapter. Searching is the algorithmic process of finding a particular item in a collection of items. A search typically answers either ``True`` or ``False`` as to whether the item is present. On occasion it may be modified to return where the item is found. For our purposes here, we will simply concern ourselves with the question of membership."
msgstr ""

#: ../../_sources/SortSearch/searching.rst:17
msgid "In Python, there is a very easy way to ask whether an item is in a list of items. We use the ``in`` operator."
msgstr ""

#: ../../_sources/SortSearch/searching.rst:22
msgid ">>> 15 in [3,5,2,4,1]\n"
"False\n"
">>> 3 in [3,5,2,4,1]\n"
"True\n"
">>>"
msgstr ""

#: ../../_sources/SortSearch/searching.rst:28
msgid "Even though this is easy to write, an underlying process must be carried out to answer the question. It turns out that there are many different ways to search for the item. What we are interested in here is how these algorithms work and how they compare to one another."
msgstr ""

