# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Brad Miller, David Ranum
# This file is distributed under the same license as the Problem Solving with Algorithms and Data Structures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Problem Solving with Algorithms and Data Structures 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-01 14:03-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../_sources/Graphs/ProgrammingExercises.rst:6
msgid "Programming Exercises"
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:8
msgid "Modify the depth first search function to produce a topological sort."
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:10
msgid "Modify the depth first search to produce strongly connected components."
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:13
msgid "Write the ``transpose`` method for the ``Graph`` class."
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:15
msgid "Using breadth first search write an algorithm that can determine the shortest path from each vertex to every other vertex. This is called the all pairs shortest path problem."
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:19
msgid "Using breadth first search revise the maze program from the recursion chapter to find the shortest path out of a maze."
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:22
msgid "Write a program to solve the following problem: You have two jugs, a 4-gallon and a 3-gallon. Neither of the jugs has markings on them. There is a pump that can be used to fill the jugs with water. How can you get exactly two gallons of water in the 4 gallon jug?"
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:27
msgid "Generalize the problem above so that the parameters to your solution include the sizes of each jug and the final amount of water to be left in the larger jug."
msgstr ""

#: ../../_sources/Graphs/ProgrammingExercises.rst:31
msgid "Write a program that solves the following problem: Three missionaries and three cannibals come to a river and find a boat that holds two people. Everyone must get across the river to continue on the journey. However, if the cannibals ever outnumber the missionaries on either bank, the missionaries will be eaten. Find a series of crossings that will get everyone safely to the other side of the river."
msgstr ""

